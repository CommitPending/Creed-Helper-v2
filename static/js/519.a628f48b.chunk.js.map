{"version":3,"file":"static/js/519.a628f48b.chunk.js","mappings":"4NAMA,MAAMA,EAAa,CACjB,CACEC,MAAO,YACPC,KAAM,YACNC,KAAM,oBAER,CACEF,MAAO,cACPC,KAAM,cACNC,KAAM,2BAER,CACEF,MAAO,cACPC,KAAM,cACNC,KAAM,cA2GV,EAvGgBC,KACd,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KAGtCG,EAAYC,IAAiBJ,EAAAA,EAAAA,WAAS,KAC3C,MAAMK,EAAYC,aAAaC,QAAQ,cACvC,QAAOF,GAAYG,KAAKC,MAAMJ,EAAkB,KAGlDK,EAAAA,EAAAA,YAAU,KAEWC,WACjB,IACE,MAAMC,QAAiBC,MACrB,2DAEIC,QAAaF,EAASG,OACxBD,EAAKE,SACPjB,EAASe,EAAKG,MACdf,EAAc,oCAAoCY,EAAKG,aAEvDC,QAAQC,MAAM,6BAElB,CAAE,MAAOA,GACPD,QAAQC,MAAM,6BAA8BA,EAC9C,GAGFC,EAAY,GACX,KAEHV,EAAAA,EAAAA,YAAU,KAER,MAAMW,EAAOC,SAASD,KAClBlB,EACFkB,EAAKE,UAAUC,IAAI,aAEnBH,EAAKE,UAAUE,OAAO,aAGxBnB,aAAaoB,QAAQ,aAAclB,KAAKmB,UAAUxB,GAAY,GAC7D,CAACA,IAUJ,OACEyB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EAEtBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,MAAM,OACNJ,UAAU,8BACVK,QAViBC,KACrBb,SAASc,eAAe,eAAeb,UAAUc,OAAO,cAAc,EAUlE,aAAW,gBAAeP,UAE1BC,EAAAA,EAAAA,KAACO,EAAAA,IAAO,CAACC,KAAM,QAGjBX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,CACvC7B,IACC8B,EAAAA,EAAAA,KAAA,OACES,IAAKvC,EACLwC,IAAI,gBACJZ,UAAU,sBAGdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAAuB,IAAEhC,GAAS,oBAI9CiC,EAAAA,EAAAA,KAACW,EAAAA,EAAG,CAACC,UAAQ,EAACd,UAAU,mBAAkBC,SACvCrC,EAAWmD,KAAI,CAACC,EAAMC,KACrBf,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAAalB,UAAU,aAAYC,UACzCF,EAAAA,EAAAA,MAACoB,EAAAA,GAAO,CACNC,GAAIJ,EAAKlD,KACTkC,UAAWqB,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACtBC,EAAW,kBAAoB,UAAU,EAC1CrB,SAAA,EAEDC,EAAAA,EAAAA,KAAA,KAAGF,UAAW,GAAGgB,EAAKjD,eACtBmC,EAAAA,EAAAA,KAAA,QAAAD,SAAOe,EAAKnD,YARFoD,SAoBd,EC7CV,EAxEeM,KACb,MAAOjD,EAAYC,IAAiBJ,EAAAA,EAAAA,WAAS,KAC3C,MAAMK,EAAYC,aAAaC,QAAQ,cACvC,QAAOF,GAAYG,KAAKC,MAAMJ,EAAkB,KAG3CgD,EAAQC,IAAatD,EAAAA,EAAAA,WAAS,IAC9BuD,EAAcC,IAAmBxD,EAAAA,EAAAA,WAAS,IAQjDU,EAAAA,EAAAA,YAAU,KACR,MAAMW,EAAOC,SAASD,KAClBlB,EACFkB,EAAKE,UAAUC,IAAI,aAEnBH,EAAKE,UAAUE,OAAO,aAExBnB,aAAaoB,QAAQ,aAAclB,KAAKmB,UAAUxB,GAAY,GAC7D,CAACA,IAgBJ,OACE4B,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,UAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAEhEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAWNC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,MAAM,UACNC,QA7BauB,KACrB,MAAMC,EAAUpC,SAASc,eAAe,eACpCsB,IACFA,EAAQnC,UAAUc,OAAO,eAGzBf,SAASD,KAAKE,UAAUc,OAAO,aACjC,EAuBQR,UAAU,6BACV,aAAW,iBACX,iBAAe,EACf,gBAAc,cAAaC,UAE3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAIZ,E,cCpEb,MAiCA,EAjCmB8B,KACjB,MAAOC,EAAMC,IAAW7D,EAAAA,EAAAA,UAAS8D,OAAOC,SAASH,MAejD,OAbAlD,EAAAA,EAAAA,YAAU,KACR,MAAMsD,EAAmBA,KACvBH,EAAQC,OAAOC,SAASH,MACxB1C,QAAQ+C,IAAI,iBAAkBH,OAAOC,SAASH,KAAK,EAKrD,OAFAE,OAAOI,iBAAiB,aAAcF,GAE/B,KACLF,OAAOK,oBAAoB,aAAcH,EAAiB,CAC3D,GACA,KAGDpC,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACqB,EAAM,KACPxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,qBAAqBuC,GAAG,cAAatC,UACpDC,EAAAA,EAAAA,KAAClC,EAAO,OAEVkC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACxC,UAAU,MAAMyC,OAAK,EAAAxC,UAC9BC,EAAAA,EAAAA,KAACwC,EAAAA,GAAM,aAIR,C","sources":["layouts/Sidebar.js","layouts/Header.js","layouts/FullLayout.js"],"sourcesContent":["// Sidebar.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Nav, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'; // Use NavLink instead of Link\r\nimport { FaTimes } from 'react-icons/fa'; // Importing icon for the close button\r\n\r\nconst navigation = [\r\n  {\r\n    title: \"Box Rater\",\r\n    href: \"box-rater\", // Relative path\r\n    icon: \"bi bi-calculator\",\r\n  },\r\n  {\r\n    title: \"Quick Trade\",\r\n    href: \"quick-trade\", // Relative path\r\n    icon: \"bi bi-person-lines-fill\",\r\n  },\r\n  {\r\n    title: \"Input Rater\",\r\n    href: \"input-rater\", // Relative path\r\n    icon: \"bi bi-box\",\r\n  },\r\n];\r\n\r\nconst Sidebar = () => {\r\n  const [promo, setPromo] = useState('');\r\n  const [promoImage, setPromoImage] = useState('');\r\n\r\n  // Dark Mode State and Effect\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('isDarkMode');\r\n    return savedMode ? JSON.parse(savedMode) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the promo data when the component mounts\r\n    const fetchPromo = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          'https://pokemoncreed.net/ajax/pokedex.php?pokemon=promo'\r\n        );\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setPromo(data.name); // Set the promo name\r\n          setPromoImage(`https://pokemoncreed.net/sprites/${data.name}.png`); // Set the promo image URL\r\n        } else {\r\n          console.error('Failed to fetch promo data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching promo data:', error);\r\n      }\r\n    };\r\n\r\n    fetchPromo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply or remove the dark-mode class on the body element\r\n    const body = document.body;\r\n    if (isDarkMode) {\r\n      body.classList.add('dark-mode');\r\n    } else {\r\n      body.classList.remove('dark-mode');\r\n    }\r\n    // Save the preference to localStorage\r\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const showMobilemenu = () => {\r\n    document.getElementById('sidebarArea').classList.toggle('showSidebar');\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* Close button for mobile view */}\r\n      <Button\r\n        color=\"link\"\r\n        className=\"d-lg-none sidebar-close-btn\"\r\n        onClick={showMobilemenu}\r\n        aria-label=\"Close sidebar\"\r\n      >\r\n        <FaTimes size={20} />\r\n      </Button>\r\n\r\n      <div className=\"sidebar-promo text-center\">\r\n        {promoImage && (\r\n          <img\r\n            src={promoImage}\r\n            alt=\"Current Promo\"\r\n            className=\"promo-image mb-2\"\r\n          />\r\n        )}\r\n        <div className=\"promo-text mt-2\">\r\n          <strong>Current Promo:</strong> {promo || 'Loading...'}\r\n        </div>\r\n      </div>\r\n\r\n      <Nav vertical className=\"sidebar-nav mt-4\">\r\n        {navigation.map((navi, index) => (\r\n          <NavItem key={index} className=\"sidenav-bg\">\r\n            <NavLink\r\n              to={navi.href}\r\n              className={({ isActive }) =>\r\n                isActive ? 'nav-link active' : 'nav-link'\r\n              }\r\n            >\r\n              <i className={`${navi.icon} me-2`}></i>\r\n              <span>{navi.title}</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        ))}\r\n        {/* Disabling night mode for right now \r\n        <div className=\"dark-mode-toggle text-center mt-3\">\r\n          <button onClick={toggleDarkMode} className=\"theme-toggle-btn btn \">\r\n            {isDarkMode ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode'}\r\n          </button>\r\n        </div>\r\n        */}\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","// Header.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { FaSun, FaMoon } from 'react-icons/fa'; // Optional: Icons for dark mode toggle\r\nimport './Header.scss'; // Assuming you have a Header.scss for additional styles\r\n\r\nconst Header = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('isDarkMode');\r\n    return savedMode ? JSON.parse(savedMode) : false;\r\n  });\r\n  \r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  \r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const body = document.body;\r\n    if (isDarkMode) {\r\n      body.classList.add('dark-mode');\r\n    } else {\r\n      body.classList.remove('dark-mode');\r\n    }\r\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n  \r\n  const showMobileMenu = () => {\r\n    const sidebar = document.getElementById(\"sidebarArea\");\r\n    if (sidebar) {\r\n      sidebar.classList.toggle(\"showSidebar\");\r\n      \r\n      // Toggle body overflow to prevent scroll when sidebar is open\r\n      document.body.classList.toggle('no-scroll');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className=\"header fixed-top\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          {/* Logo or Brand Name */}\r\n          <div className=\"logo\">\r\n            <h3>Creed Helper</h3>\r\n          </div>\r\n\r\n          {/* Dark Mode Toggle (Optional) */}\r\n          {/* \r\n          <Button color=\"link\" onClick={toggleDarkMode} aria-label=\"Toggle dark mode\">\r\n            {isDarkMode ? <FaSun size={20} /> : <FaMoon size={20} />}\r\n          </Button>\r\n          */}\r\n\r\n          {/* Toggle Button */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={showMobileMenu}\r\n            className=\"d-lg-none theme-toggle-btn\"\r\n            aria-label=\"Toggle sidebar\"\r\n            aria-expanded={false} // You can manage this state if needed\r\n            aria-controls=\"sidebarArea\"\r\n          >\r\n            <i className=\"bi bi-list\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Header from \"./Header\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nconst FullLayout = () => {\r\n  const [hash, setHash] = useState(window.location.hash);\r\n\r\n  useEffect(() => {\r\n    const handleHashChange = () => {\r\n      setHash(window.location.hash);\r\n      console.log(\"Hash changed: \", window.location.hash);\r\n    };\r\n\r\n    window.addEventListener(\"hashchange\", handleHashChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"hashchange\", handleHashChange);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <div className=\"pageWrapper d-lg-flex\">\r\n        <aside className=\"sidebarArea shadow\" id=\"sidebarArea\">\r\n          <Sidebar />\r\n        </aside>\r\n        <div className=\"contentArea\">\r\n          <Container className=\"p-4\" fluid>\r\n            <Outlet />\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FullLayout;\r\n"],"names":["navigation","title","href","icon","Sidebar","promo","setPromo","useState","promoImage","setPromoImage","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","JSON","parse","useEffect","async","response","fetch","data","json","success","name","console","error","fetchPromo","body","document","classList","add","remove","setItem","stringify","_jsxs","className","children","_jsx","Button","color","onClick","showMobilemenu","getElementById","toggle","FaTimes","size","src","alt","Nav","vertical","map","navi","index","NavItem","NavLink","to","_ref","isActive","Header","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","showMobileMenu","sidebar","FullLayout","hash","setHash","window","location","handleHashChange","log","addEventListener","removeEventListener","id","Container","fluid","Outlet"],"sourceRoot":""}